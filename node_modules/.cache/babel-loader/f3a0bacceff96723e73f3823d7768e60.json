{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { logIn as logInOperation, logOut as logOutOperation, fetchCurrentUser as fetchCurrentUserOperation } from './Auth-operations'; // Rename operations for clarity\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    isAuthenticated: false\n    // other initial state properties\n  },\n\n  reducers: {\n    // Renamed to avoid conflicts with thunks\n    setUser: (state, action) => {\n      state.user = action.payload;\n      state.isAuthenticated = true;\n    },\n    clearUser: state => {\n      state.user = null;\n      state.isAuthenticated = false;\n    }\n    // Add any other reducers here\n  },\n\n  extraReducers: builder => {\n    builder.addCase(logInOperation.fulfilled, (state, action) => {\n      state.user = action.payload.user;\n      state.isAuthenticated = true;\n    }).addCase(logInOperation.rejected, (state, action) => {\n      // Handle the rejected case\n    }).addCase(logOutOperation.fulfilled, state => {\n      state.user = null;\n      state.isAuthenticated = false;\n    }).addCase(logOutOperation.rejected, (state, action) => {\n      // Handle the rejected case\n    }).addCase(fetchCurrentUserOperation.fulfilled, (state, action) => {\n      state.user = action.payload.user;\n      state.isAuthenticated = true;\n    }).addCase(fetchCurrentUserOperation.rejected, (state, action) => {\n      // Handle the rejected case\n    });\n  }\n});\nexport const {\n  setUser,\n  clearUser\n} = authSlice.actions; // Export renamed actions\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","logIn","logInOperation","logOut","logOutOperation","fetchCurrentUser","fetchCurrentUserOperation","authSlice","name","initialState","user","isAuthenticated","reducers","setUser","state","action","payload","clearUser","extraReducers","builder","addCase","fulfilled","rejected","actions","reducer"],"sources":["C:/hw02-express/expense-tracker/src/redux/Auth/Auth-slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { logIn as logInOperation, logOut as logOutOperation, fetchCurrentUser as fetchCurrentUserOperation } from './Auth-operations'; // Rename operations for clarity\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    user: null,\r\n    isAuthenticated: false,\r\n    // other initial state properties\r\n  },\r\n  reducers: {\r\n    // Renamed to avoid conflicts with thunks\r\n    setUser: (state, action) => {\r\n      state.user = action.payload;\r\n      state.isAuthenticated = true;\r\n    },\r\n    clearUser: (state) => {\r\n      state.user = null;\r\n      state.isAuthenticated = false;\r\n    },\r\n    // Add any other reducers here\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(logInOperation.fulfilled, (state, action) => {\r\n        state.user = action.payload.user;\r\n        state.isAuthenticated = true;\r\n      })\r\n      .addCase(logInOperation.rejected, (state, action) => {\r\n        // Handle the rejected case\r\n      })\r\n      .addCase(logOutOperation.fulfilled, (state) => {\r\n        state.user = null;\r\n        state.isAuthenticated = false;\r\n      })\r\n      .addCase(logOutOperation.rejected, (state, action) => {\r\n        // Handle the rejected case\r\n      })\r\n      .addCase(fetchCurrentUserOperation.fulfilled, (state, action) => {\r\n        state.user = action.payload.user;\r\n        state.isAuthenticated = true;\r\n      })\r\n      .addCase(fetchCurrentUserOperation.rejected, (state, action) => {\r\n        // Handle the rejected case\r\n      });\r\n  },\r\n});\r\n\r\nexport const { setUser, clearUser } = authSlice.actions; // Export renamed actions\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,IAAIC,cAAc,EAAEC,MAAM,IAAIC,eAAe,EAAEC,gBAAgB,IAAIC,yBAAyB,QAAQ,mBAAmB,CAAC,CAAC;;AAEvI,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,IAAI,EAAE,IAAI;IACVC,eAAe,EAAE;IACjB;EACF,CAAC;;EACDC,QAAQ,EAAE;IACR;IACAC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACJ,IAAI,GAAGK,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACH,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDM,SAAS,EAAGH,KAAK,IAAK;MACpBA,KAAK,CAACJ,IAAI,GAAG,IAAI;MACjBI,KAAK,CAACH,eAAe,GAAG,KAAK;IAC/B;IACA;EACF,CAAC;;EACDO,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAClB,cAAc,CAACmB,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACJ,IAAI,GAAGK,MAAM,CAACC,OAAO,CAACN,IAAI;MAChCI,KAAK,CAACH,eAAe,GAAG,IAAI;IAC9B,CAAC,CAAC,CACDS,OAAO,CAAClB,cAAc,CAACoB,QAAQ,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MACnD;IAAA,CACD,CAAC,CACDK,OAAO,CAAChB,eAAe,CAACiB,SAAS,EAAGP,KAAK,IAAK;MAC7CA,KAAK,CAACJ,IAAI,GAAG,IAAI;MACjBI,KAAK,CAACH,eAAe,GAAG,KAAK;IAC/B,CAAC,CAAC,CACDS,OAAO,CAAChB,eAAe,CAACkB,QAAQ,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MACpD;IAAA,CACD,CAAC,CACDK,OAAO,CAACd,yBAAyB,CAACe,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC/DD,KAAK,CAACJ,IAAI,GAAGK,MAAM,CAACC,OAAO,CAACN,IAAI;MAChCI,KAAK,CAACH,eAAe,GAAG,IAAI;IAC9B,CAAC,CAAC,CACDS,OAAO,CAACd,yBAAyB,CAACgB,QAAQ,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC9D;IAAA,CACD,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEF,OAAO;EAAEI;AAAU,CAAC,GAAGV,SAAS,CAACgB,OAAO,CAAC,CAAC;AACzD,eAAehB,SAAS,CAACiB,OAAO"},"metadata":{},"sourceType":"module"}