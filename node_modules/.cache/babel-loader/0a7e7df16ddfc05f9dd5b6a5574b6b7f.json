{"ast":null,"code":"// src/redux/Transactions/transactions-slice.js\nimport { createSlice } from '@reduxjs/toolkit';\nimport { addTransaction, fetchTransactions, deleteTransaction, updateTransaction } from './Transaction-operations';\nconst transactionsSlice = createSlice({\n  name: 'transactions',\n  initialState: {\n    items: [],\n    // Holds the list of transactions\n    status: 'idle',\n    // Can be 'idle', 'loading', 'succeeded', or 'failed'\n    error: null // To store any errors\n  },\n\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchTransactions.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchTransactions.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.items = action.payload;\n    }).addCase(fetchTransactions.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(addTransaction.fulfilled, (state, action) => {\n      state.items.push(action.payload);\n    }).addCase(deleteTransaction.fulfilled, (state, action) => {\n      state.items = state.items.filter(transaction => transaction.id !== action.payload);\n    }).addCase(updateTransaction.fulfilled, (state, action) => {\n      state.items = state.items.map(transaction => transaction.id === action.payload.id ? action.payload : transaction);\n    });\n  }\n});\nexport default transactionsSlice.reducer;","map":{"version":3,"names":["createSlice","addTransaction","fetchTransactions","deleteTransaction","updateTransaction","transactionsSlice","name","initialState","items","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","push","filter","transaction","id","map","reducer"],"sources":["C:/hw02-express/expense-tracker/src/redux/Transactions/transactions-slice.js"],"sourcesContent":["// src/redux/Transactions/transactions-slice.js\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport { \r\n  addTransaction, \r\n  fetchTransactions, \r\n  deleteTransaction, \r\n  updateTransaction \r\n} from './Transaction-operations';\r\n\r\nconst transactionsSlice = createSlice({\r\n  name: 'transactions',\r\n  initialState: {\r\n    items: [],   // Holds the list of transactions\r\n    status: 'idle',  // Can be 'idle', 'loading', 'succeeded', or 'failed'\r\n    error: null   // To store any errors\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchTransactions.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchTransactions.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.items = action.payload;\r\n      })\r\n      .addCase(fetchTransactions.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(addTransaction.fulfilled, (state, action) => {\r\n        state.items.push(action.payload);\r\n      })\r\n      .addCase(deleteTransaction.fulfilled, (state, action) => {\r\n        state.items = state.items.filter(transaction => transaction.id !== action.payload);\r\n      })\r\n      .addCase(updateTransaction.fulfilled, (state, action) => {\r\n        state.items = state.items.map(transaction =>\r\n          transaction.id === action.payload.id ? action.payload : transaction\r\n        );\r\n      });\r\n  },\r\n});\r\n\r\nexport default transactionsSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SACEC,cAAc,EACdC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAiB,QACZ,0BAA0B;AAEjC,MAAMC,iBAAiB,GAAGL,WAAW,CAAC;EACpCM,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IAAI;IACbC,MAAM,EAAE,MAAM;IAAG;IACjBC,KAAK,EAAE,IAAI,CAAG;EAChB,CAAC;;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACZ,iBAAiB,CAACa,OAAO,EAAGC,KAAK,IAAK;MAC7CA,KAAK,CAACP,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDK,OAAO,CAACZ,iBAAiB,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAACZ,iBAAiB,CAACkB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACtDF,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAACb,cAAc,CAACgB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAACR,KAAK,CAACa,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC,CACDL,OAAO,CAACX,iBAAiB,CAACc,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACc,MAAM,CAACC,WAAW,IAAIA,WAAW,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAAC;IACpF,CAAC,CAAC,CACDL,OAAO,CAACV,iBAAiB,CAACa,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACiB,GAAG,CAACF,WAAW,IACvCA,WAAW,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACK,EAAE,GAAGN,MAAM,CAACC,OAAO,GAAGI,WAC1D,CAAC;IACH,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAelB,iBAAiB,CAACqB,OAAO"},"metadata":{},"sourceType":"module"}