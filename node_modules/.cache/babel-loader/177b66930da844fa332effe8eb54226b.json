{"ast":null,"code":"var _jsxFileName = \"C:\\\\hw02-express\\\\expense-tracker\\\\src\\\\components\\\\AuthForm\\\\AuthForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport styles from './AuthForm.module.css';\nimport showPasswordIcon from './icons-show.png';\nimport hidePasswordIcon from './icons8-hide.png';\nimport { registerUser, logIn } from '../../redux/Auth/Auth-operations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = _ref => {\n  _s();\n  let {\n    formFields,\n    submitButtonText,\n    initialValues,\n    validationSchema,\n    navigation,\n    formType\n  } = _ref;\n  const dispatch = useDispatch();\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const handlePasswordToggle = () => {\n    setPasswordVisible(prev => !prev);\n  };\n  const handleSubmit = async (values, _ref2) => {\n    let {\n      setErrors\n    } = _ref2;\n    try {\n      if (formType === 'register') {\n        await dispatch(registerUser(values));\n        // Handle successful registration\n      } else if (formType === 'login') {\n        await dispatch(logIn(values));\n        // Handle successful login\n      }\n    } catch (error) {\n      setErrors({\n        [error.field]: error.message\n      });\n      console.error('Form submission error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.authFormContainer,\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: _ref3 => {\n        let {\n          errors\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          className: styles.authForm,\n          children: [formFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.fieldWrapper,\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                id: field.name,\n                name: field.name,\n                type: field.type === 'password' && passwordVisible ? 'text' : field.type,\n                placeholder: field.placeholder,\n                autoComplete: field.type === 'password' ? 'current-password' : 'off',\n                className: `${styles.formField} ${errors[field.name] ? styles.invalid : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), field.type === 'password' && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: passwordVisible ? hidePasswordIcon : showPasswordIcon,\n                alt: passwordVisible ? 'Hide password' : 'Show password',\n                className: styles.togglePasswordIcon,\n                onClick: handlePasswordToggle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: field.name,\n              component: \"div\",\n              className: styles.errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: styles.submitButton,\n            children: submitButtonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.navigation,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.navText,\n              children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n                href: navigation.href,\n                className: styles.navLink,\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"Iv1TsPqaRTMBE5Hna7r5dSznp9g=\", false, function () {\n  return [useDispatch];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","Formik","Form","Field","ErrorMessage","useDispatch","styles","showPasswordIcon","hidePasswordIcon","registerUser","logIn","jsxDEV","_jsxDEV","AuthForm","_ref","_s","formFields","submitButtonText","initialValues","validationSchema","navigation","formType","dispatch","passwordVisible","setPasswordVisible","handlePasswordToggle","prev","handleSubmit","values","_ref2","setErrors","error","field","message","console","className","authFormContainer","children","onSubmit","_ref3","errors","authForm","map","formGroup","fieldWrapper","id","name","type","placeholder","autoComplete","formField","invalid","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","togglePasswordIcon","onClick","component","errorMessage","submitButton","navText","href","navLink","_c","$RefreshReg$"],"sources":["C:/hw02-express/expense-tracker/src/components/AuthForm/AuthForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\nimport styles from './AuthForm.module.css';\r\nimport showPasswordIcon from './icons-show.png';\r\nimport hidePasswordIcon from './icons8-hide.png';\r\nimport { registerUser, logIn } from '../../redux/Auth/Auth-operations';\r\n\r\nconst AuthForm = ({\r\n  formFields,\r\n  submitButtonText,\r\n  initialValues,\r\n  validationSchema,\r\n  navigation,\r\n  formType,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  const handlePasswordToggle = () => {\r\n    setPasswordVisible(prev => !prev);\r\n  };\r\n\r\n  const handleSubmit = async (values, { setErrors }) => {\r\n    try {\r\n      if (formType === 'register') {\r\n        await dispatch(registerUser(values));\r\n        // Handle successful registration\r\n      } else if (formType === 'login') {\r\n        await dispatch(logIn(values));\r\n        // Handle successful login\r\n      }\r\n    } catch (error) {\r\n      setErrors({ [error.field]: error.message });\r\n      console.error('Form submission error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.authFormContainer}>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ errors }) => (\r\n          <Form className={styles.authForm}>\r\n            {formFields.map(field => (\r\n              <div key={field.name} className={styles.formGroup}>\r\n                <div className={styles.fieldWrapper}>\r\n                  <Field\r\n                    id={field.name}\r\n                    name={field.name}\r\n                    type={field.type === 'password' && passwordVisible ? 'text' : field.type}\r\n                    placeholder={field.placeholder}\r\n                    autoComplete={field.type === 'password' ? 'current-password' : 'off'}\r\n                    className={`${styles.formField} ${errors[field.name] ? styles.invalid : ''}`}\r\n                  />\r\n                  {field.type === 'password' && (\r\n                    <img\r\n                      src={passwordVisible ? hidePasswordIcon : showPasswordIcon}\r\n                      alt={passwordVisible ? 'Hide password' : 'Show password'}\r\n                      className={styles.togglePasswordIcon}\r\n                      onClick={handlePasswordToggle}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <ErrorMessage\r\n                  name={field.name}\r\n                  component=\"div\"\r\n                  className={styles.errorMessage}\r\n                />\r\n              </div>\r\n            ))}\r\n            <button type=\"submit\" className={styles.submitButton}>\r\n              {submitButtonText}\r\n            </button>\r\n            <div className={styles.navigation}>\r\n              <span className={styles.navText}>\r\n                Already have an account?{' '}\r\n                <a href={navigation.href} className={styles.navLink}>\r\n                  Sign In\r\n                </a>\r\n              </span>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}